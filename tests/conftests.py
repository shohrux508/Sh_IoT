# import pytest
# from app.database import init_engine, engine, SessionLocal, Base, get_db
#
# # üîß –¢–æ–ª—å–∫–æ –æ–¥–∏–Ω –≤—ã–∑–æ–≤ ‚Äî –∏ –æ–Ω –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç engine + SessionLocal
# init_engine("sqlite+aiosqlite:///./test.db", use_sqlite=True)
#
# # üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º–µ–Ω–Ω–æ SessionLocal, –∫–æ—Ç–æ—Ä—ã–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª—Å—è –≤ init_engine
# async def override_get_session():
#     print("‚úÖ Using SQLite test session")
#     async with SessionLocal() as session:
#         yield session
#
# from app.main import create_app
# app = create_app()
# app.dependency_overrides[get_db] = override_get_session
#
# # üß™ –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—ã –æ–¥–∏–Ω —Ä–∞–∑
# @pytest.fixture(scope="session", autouse=True)
# async def prepare():
#     async with engine.begin() as conn:
#         await conn.run_sync(Base.metadata.create_all)
